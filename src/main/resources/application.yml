spring:
  mail:
    host: smtp.gmail.com
    port: 465
    username: _____@gmail.com
    password: "**** **** **** ****"
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          #          connectiontimeout: 5000
          timeout: 5000
      #          writetimeout: 5000
      auth-code-expiration-millis: 1800000  # 30 * 60 * 1000 == 30분

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/passwill
    username: root
    password: 1234



  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  # create
  logging:
    level:
      org:
        springframework:
          security: debug
  servlet:
    multipart:
      maxFileSize: 2MB
      maxRequestSize: 2MB

server:
  port: 8080
  servlet:
    session:
      persistent: false
pass:
  key: 1






#
#    host: Gmail의 SMTP 서버 호스트
#    port: SMTP 서버의 포트 번호. Gmail SMTP 서버는 587번 포트를 사용
#    username: 이메일을 보내는 용으로 사용되는 계정의 이메일 주소 입력
#    password: 위에서 생성했던 앱 비밀번호 입력
#    properties: 이메일 구성에 대한 추가 속성
#    auth: SMTP 서버에 인증 필요한 경우 true로 지정한다. Gmail SMTP 서버는 인증을 요구하기 때문에 true로 설정해야 한다.
#    starttls: SMTP 서버가 TLS를 사용하여 안전한 연결을 요구하는 경우 true로 설정한다. TLS는 데이터를 암호화하여 안전한 전송을 보장하는 프로토콜이다.
#    connectiontimeout: 클라이언트가 SMTP 서버와의 연결을 설정하는 데 대기해야 하는 시간(Millisecond). 연결이 불안정한 경우 대기 시간이 길어질 수 있기 때문에 너무 크게 설정하면 전송 속도가 느려질 수 있다.
#    timeout: 클라이언트가 SMTP 서버로부터 응답을 대기해야 하는 시간(Millisecond). 서버에서 응답이 오지 않는 경우 대기 시간을 제한하기 위해 사용된다.
#    writetimeout: 클라이언트가 작업을 완료하는데 대기해야 하는 시간(Millisecond). 이메일을 SMTP 서버로 전송하는 데 걸리는 시간을 제한하는데 사용된다.
#    auth-code-expiration-millis: 이메일 인증 코드의 만료 시간(Millisecond)
#
#
#



  # OAuth 로그인
---
spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: Environment Variables로 등록
            client-secret: Environment Variables로 등록
            scope:
          #              - email
          #              - profile
          naver:
            client-id: ________
            client-secret: _________
            scope:
              - name
              - email
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/naver


          kakao:
            client-id: ______________________________________
            client-secret: _______________________________________
            scope:
              - account_email
              - profile_nickname
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/kakao
            client-name: Kakao
            client-authentication-method: client_secret_post


          facebook:
            client-id: Environment Variables로 등록
            client-secret: Environment Variables로 등록
            scope:
              - email
              - public_profile

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id









